#include <bits/stdc++.h>
using namespace std;
int a[50010];
int st[110000];
int n,m;
void maketree(int node=1, int l=0, int r=n-1)
{
	if(r==l){st[node]=a[l];return;}
	maketree(node*2,l,(l+r)/2);
	maketree(node*2 +1, 1+(l+r)/2,r);
	st[node]=max(st[node*2],st[node*2 + 1]);

}
//query from i to j, i and j 0-indexed
int querytree(int i, int j, int node=1, int l=0, int r=n-1)
{
	
	if(i>r ||j<l)return (INT_MAX + 1);
	if(l>=i && r<=j)return st[node];
	int left, right;
	left = querytree(i,j,node*2,l,(l+r)/2);
	right = querytree(i,j,node*2 + 1, 1+(l+r)/2,r);
	return max(left,right);
}
int main() {
	// your code goes here
	ios::sync_with_stdio(false);
	cin>>n;
	for(int i=0;i<n;++i)cin>>a[i];
	maketree();
	/*for(int i=1;i<n*2 + 5;++i)
	{
		cout<<st[i]<<" ";
	}*/
	cin>>m;
	int i,j;
	for(int i=0;i<m;++i)
	{
		cin>>i>>j;
		--i;--j;
		cout<<querytree(i,j)<<endl;
	}
	return 0;
}
